#! /bin/sh -l
#
# Script to run unittests, or any other command, and notify
# user using the OS notification mechanism
#
# Usage:
#   unittest-notifier [options] command ...
#
# All arguments will be considered the command to run
#

# Select notifier mechanism depending on availability
# Indicate if no known mechanism is available

# MacOS - install terminal-notifier from https://github.com/julienXX/terminal-notifier or via Brew/MacPorts
mechanism=terminal-notifier

# Set up options for icons depending on mechanism
case $mechanism in
    terminal-notifier)
        notifier=/Applications/terminal-notifier.app/Contents/MacOS/terminal-notifier
        notifier=terminal-notifier
        title_prefix=-title
        message_prefix=-message
        app_icon_prefix=-appIcon
        icon_prefix=-contentImage
        ;;
    *)
        echo "Unknown notifier mechanism. Exiting..."
        exit
esac

# Set default values for most options
title_text='Unittests'
start_text="Starting..."
passed_text="Passed"
failed_text="Failed"
app_icon=cgreen-icon.png
start_icon=icon-start.png
passed_icon=icon-passed.png
failed_icon=icon-failed.png


# Handle options
while getopts ":t:" opt; do
    case $opt in
        t)
            # Title
            title_text=$OPTARG
            shift 2
            ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            exit 1
            ;;
        :)
            echo "Option -$OPTARG requires an argument." >&2
            exit 1
            ;;
    esac
done

# Is there a command?
if test "$#" -eq 0; then
    echo "ERROR: expecting a command to run"
    echo
    echo "Usage: $0 <options> <command>"
    echo
    echo "Currently there are no options available."
    echo "All arguments that are not options, will be the command line that is run."
    exit
fi

# Assemble all notifier options
title="$title_prefix $title_text"
start="$message_prefix $start_text $icon_prefix $start_icon"
passed="$message_prefix $passed_text $icon_prefix $passed_icon"
failed="$message_prefix $failed_text $icon_prefix $failed_icon"

# Indicate start
$notifier $title $start

# Run the command and indicate pass or fail depending on exit code
if ${@:1} ; then
    $notifier $title $passed
else
    $notifier $title $failed
fi
